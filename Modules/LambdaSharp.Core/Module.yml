# MindTouch Î»#
# Copyright (C) 2018-2019 MindTouch, Inc.
# www.mindtouch.com  oss@mindtouch.com
#
# For community documentation and downloads visit mindtouch.com;
# please review the licensing section.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Module: LambdaSharp.Core
Description: LambdaSharp Core Resources and Services
Pragmas:
  - no-core-version-check
  - no-lambdasharp-dependencies
  - no-module-registration
  - Overrides:
      Module::DeadLetterQueue: !Ref DeadLetterQueue
      Module::LoggingStream: !Ref LoggingStream
      Module::LoggingStreamRole: !GetAtt LoggingStreamRole.Arn

Items:

  # Resource for LambdaSharp Tier
  - Parameter: DeadLetterQueue
    Scope: public
    Section: LambdaSharp Tier Settings
    Label: Dead letter queue for functions (leave blank to create a new queue)
    Description: Dead Letter Queue (ARN)
    Type: AWS::SQS::Queue
    Properties: { }

  - Parameter: LoggingStream
    Scope: public
    Section: LambdaSharp Tier Settings
    Label: Logging Kinesis stream for functions (leave blank to create a new stream)
    Description: Logging Stream (ARN)
    Type: AWS::Kinesis::Stream
    Allow: Subscribe
    Properties:
      RetentionPeriodHours: !Ref LoggingStreamRetentionPeriodHours
      ShardCount: !Ref LoggingStreamShardCount

  - Parameter: LoggingStreamRetentionPeriodHours
    Section: LambdaSharp Tier Settings
    Label: Size of the Logging stream buffer (in hours)
    Description: Retention period (hours)
    Type: Number
    Default: 24
    MinValue: 1

  - Parameter: LoggingStreamShardCount
    Section: LambdaSharp Tier Settings
    Label: Number of Kinesis shards for the logging streams
    Description: Number of Kinesis shards
    Type: Number
    Default: 1
    MinValue: 1

  - Parameter: CoreSecretsKey
    Scope: all
    Section: LambdaSharp Tier Settings
    Label: KMS key used by LambdaSharp.Core to encrypt sensitive information (leave blank to create a new key)
    Description: Encryption Key (ARN)
    Type: AWS::KMS::Key
    AllowedPattern: '(arn:aws:kms:.*)?'
    ConstraintDescription: Must be a valid KMS Key ARN or left blank
    Allow:
      - kms:Decrypt
      - kms:Encrypt
    Properties:
      Description: !Sub "LambdaSharp.Core encryption key for ${AWS::StackName}"
      KeyPolicy:
        Version: 2012-10-17
        Id: !Sub "${AWS::StackName}CoreSecretsKeyPolicy"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"

  # Every CloudWatch log subscription needs a role that allows it to write to the Kinesis stream
  - Resource: LoggingStreamRole
    Scope: public
    Description: CloudWatch Logs Role for writing to logging stream (ARN)
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: CloudWatchLogsPrincipal
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}CloudWatchLogsKinesisPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsKinesisPermissions
                Effect: Allow
                Action: kinesis:PutRecord
                Resource: !Ref LoggingStream

  # Rollbar Settings
  - Parameter: RollbarReadAccessToken
    Section: Rollbar Settings
    Label: Account-level token for read operations (leave blank to disable Rollbar integration)
    Description: Read Access Token
    Type: Secret
    Scope: RegistrationFunction
    Default: ""

  - Parameter: RollbarWriteAccessToken
    Section: Rollbar Settings
    Label: Account-level token for write operations (leave blank to disable Rollbar integration)
    Description: Write Access Token
    Type: Secret
    Scope: RegistrationFunction
    Default: ""

  - Parameter: RollbarProjectPrefix
    Section: Rollbar Settings
    Label: Optional prefix when creating Rollbar projects (e.g. "LambdaSharp-")
    Description: Project Prefix
    Scope: RegistrationFunction
    Default: ""

  # CloudWatch Log Events Processing
  - Function: ProcessLogEvents
    Description: Process log events from all LambdaSharp module functions
    Memory: 256
    Timeout: 30
    Sources:
      - Kinesis: LoggingStream

  # Module & Function Registrations
  - Resource: ErrorReportTopic
    Scope: public
    Description: SNS topic for LambdaSharp module errors
    Scope: ProcessLogEvents
    Type: AWS::SNS::Topic
    Allow: Publish

  - Resource: UsageReportTopic
    Scope: public
    Description: SNS topic for LambdaSharp function usage reports
    Scope: ProcessLogEvents
    Type: AWS::SNS::Topic
    Allow: Publish

  - Resource: RegistrationTable
    Description: DynamoDb table for storing function registrations
    Scope: all
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH

  - Function: RegistrationFunction
    Description: Register LambdaSharp modules and functions
    Memory: 256
    Timeout: 30

  - ResourceType: LambdaSharp::Registration::Module
    Description: Custom resource type for module registrations
    Handler: RegistrationFunction
    Properties:

      - Name: ModuleId
        Description: Module CloudFormation stack name
        Type: String
        Required: true

      - Name: Module
        Description: Module full name and version
        Type: String
        Required: true

    Attributes:

      - Name: Registration
        Description: Registration ID
        Type: String

  - ResourceType: LambdaSharp::Registration::Function
    Description: Custom resource type for function registrations
    Handler: RegistrationFunction
    Properties:

      - Name: ModuleId
        Description: Module CloudFormation stack name
        Type: String
        Required: true

      - Name: FunctionId
        Description: Module function ARN
        Type: String
        Required: true

      - Name: FunctionName
        Description: Module function name
        Type: String
        Required: true

      - Name: FunctionLogGroupName
        Description: Module function CloudWatch log group name
        Type: String
        Required: true

      - Name: FunctionMaxMemory
        Description: Max memory for module function
        Type: Number
        Required: true

      - Name: FunctionMaxDuration
        Description: Max duration for module function
        Type: Number
        Required: true

      - Name: FunctionPlatform
        Description: Module function execution platform
        Type: String
        Required: true

      - Name: FunctionFramework
        Description: Module function execution framework
        Type: String
        Required: true

      - Name: FunctionLanguage
        Description: Module function programming language
        Type: String
        Required: true

    Attributes:

      - Name: Registration
        Description: Registration ID
        Type: String

  # Module Finalizer
  - Function: Finalizer
    Description: Clean-up resources on tear down
    Memory: 256
    Timeout: 900

  #######################
  # Bootstrap Resources #
  #######################

  # IMPORTANT: must EXACTLY match resources from 'LambdaSharpToolConfig.yml'

  - Variable: CoreServices
    Scope: public
    Description: Flag indicating if operating services are deployed (String)
    Value: Enabled

  # S3 Deployment Bucket
  - Parameter: ExistingDeploymentBucket
    Section: LambdaSharp Deployment Settings
    Label: ARN of an existing S3 bucket for LambdaSharp deployments (if blank, a new S3 bucket is created)
    Description: ARN of an existing S3 bucket for LambdaSharp deployments (if blank, a new S3 bucket is created)
    Type: String
    AllowedPattern: '(arn:aws:s3:.*)?'
    ConstraintDescription: Must be a valid S3 ARN (all lowercase) or left blank

  - Condition: CreateDeploymentBucket
    Value: !Equals [ !Ref ExistingDeploymentBucket, "" ]

  - Resource: DeploymentBucketResource
    Type: AWS::S3::Bucket
    If: CreateDeploymentBucket

  - Resource: DeploymentBucketPolicy
    Type: AWS::S3::BucketPolicy
    If: CreateDeploymentBucket
    Properties:
      Bucket: !Ref DeploymentBucketResource
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: serverlessrepo.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "${DeploymentBucketResource.Arn}/*"

  - Resource: DeploymentBucket
    Description: S3 bucket for published modules (ARN)
    Scope: public, Finalizer
    Value: !If
      - CreateDeploymentBucket
      - !GetAtt DeploymentBucketResource.Arn
      - !Ref ExistingDeploymentBucket
    Type: AWS::S3::Bucket
    Allow: ReadWrite
