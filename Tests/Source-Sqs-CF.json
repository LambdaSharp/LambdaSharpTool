{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "LambdaSharp CloudFormation Test (v1.0)",
  "Parameters": {
    "ModuleSecrets": {
      "Type": "String",
      "Description": "Comma-separated list of optional secret keys",
      "Default": ""
    },
    "ModuleDeadLetterQueueArn": {
      "Type": "String",
      "Description": "Dead letter queue for functions",
      "Default": "$LambdaSharp::DeadLetterQueueArn"
    },
    "ModuleLoggingStreamArn": {
      "Type": "String",
      "Description": "Logging kinesis stream for functions",
      "Default": "$LambdaSharp::LoggingStreamArn"
    },
    "ModuleDefaultSecretKeyArn": {
      "Type": "String",
      "Description": "Default secret key for functions",
      "Default": "$LambdaSharp::DefaultSecretKeyArn"
    },
    "DeploymentBucketName": {
      "Type": "String",
      "Description": "Source deployment S3 bucket name"
    },
    "DeploymentBucketPath": {
      "Type": "String",
      "Description": "Source deployment S3 bucket path"
    },
    "Tier": {
      "Type": "String",
      "Description": "Module deployment tier"
    },
    "TierLowercase": {
      "Type": "String",
      "Description": "Module deployment tier (lowercase)"
    }
  },
  "Resources": {
    "ModuleRegistration": {
      "Type": "Custom::LambdaSharpRegisterModule",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${Tier}-CustomResource-LambdaSharp::Register::Module"
          }
        },
        "Tier": {
          "Ref": "Tier"
        },
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "ModuleName": "TestModule",
        "ModuleVersion": "1.0"
      }
    },
    "Sqs1": {
      "Type": "AWS::SQS::Queue",
      "Properties": {}
    },
    "Sqs2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {}
    },
    "CloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "CloudWatchLogsKinesisInvocation",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Sub": "logs.${AWS::Region}.amazonaws.com"
                }
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "CloudWatchLogsKinesisPermissions",
                  "Effect": "Allow",
                  "Action": "kinesis:PutRecord",
                  "Resource": {
                    "Fn::If": [
                      "ModuleLoggingStreamArnIsImport",
                      {
                        "Fn::ImportValue": {
                          "Fn::Sub": [
                            "${Tier}-${Import}",
                            {
                              "Import": {
                                "Fn::Select": [
                                  "1",
                                  {
                                    "Fn::Split": [
                                      "$",
                                      {
                                        "Ref": "ModuleLoggingStreamArn"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "Ref": "ModuleLoggingStreamArn"
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${AWS::StackName}ModuleCloudWatchLogsPolicy"
            }
          }
        ]
      }
    },
    "ModuleRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "ModuleLambdaInvocation",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "ModuleLogStreamAccess",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Sid": "ModuleSecretsDecryption",
                  "Effect": "Allow",
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:GenerateDataKeyWithoutPlaintext"
                  ],
                  "Resource": {
                    "Fn::Split": [
                      ",",
                      {
                        "Fn::Join": [
                          ",",
                          [
                            {
                              "Fn::If": [
                                "ModuleDefaultSecretKeyArnIsImport",
                                {
                                  "Fn::ImportValue": {
                                    "Fn::Sub": [
                                      "${Tier}-${Import}",
                                      {
                                        "Import": {
                                          "Fn::Select": [
                                            "1",
                                            {
                                              "Fn::Split": [
                                                "$",
                                                {
                                                  "Ref": "ModuleDefaultSecretKeyArn"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "Ref": "ModuleDefaultSecretKeyArn"
                                }
                              ]
                            },
                            {
                              "Ref": "ModuleSecrets"
                            }
                          ]
                        ]
                      }
                    ]
                  }
                },
                {
                  "Sid": "Sqs1",
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ChangeMessageVisibility",
                    "sqs:ChangeMessageVisibilityBatch",
                    "sqs:DeleteMessage",
                    "sqs:DeleteMessageBatch",
                    "sqs:GetQueueAttributes",
                    "sqs:GetQueueUrl",
                    "sqs:ListQueueTags",
                    "sqs:ReceiveMessage"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "Sqs1",
                      "Arn"
                    ]
                  }
                },
                {
                  "Sid": "Sqs2",
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ChangeMessageVisibility",
                    "sqs:ChangeMessageVisibilityBatch",
                    "sqs:DeleteMessage",
                    "sqs:DeleteMessageBatch",
                    "sqs:GetQueueAttributes",
                    "sqs:GetQueueUrl",
                    "sqs:ListQueueTags",
                    "sqs:ReceiveMessage"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "Sqs2",
                      "Arn"
                    ]
                  }
                },
                {
                  "Sid": "ModuleDeadLetterQueueLogging",
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage"
                  ],
                  "Resource": {
                    "Fn::If": [
                      "ModuleDeadLetterQueueArnIsImport",
                      {
                        "Fn::ImportValue": {
                          "Fn::Sub": [
                            "${Tier}-${Import}",
                            {
                              "Import": {
                                "Fn::Select": [
                                  "1",
                                  {
                                    "Fn::Split": [
                                      "$",
                                      {
                                        "Ref": "ModuleDeadLetterQueueArn"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "Ref": "ModuleDeadLetterQueueArn"
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${AWS::StackName}ModulePolicy"
            }
          }
        ]
      }
    },
    "FunctionRegistration": {
      "Type": "Custom::LambdaSharpRegisterFunction",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${Tier}-CustomResource-LambdaSharp::Register::Function"
          }
        },
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "FunctionId": {
          "Ref": "Function"
        },
        "FunctionName": "Function",
        "FunctionLogGroupName": {
          "Fn::Sub": "/aws/lambda/${Function}"
        },
        "FunctionPlatform": "AWS Lambda",
        "FunctionFramework": "dotnetcore2.1",
        "FunctionLanguage": "csharp",
        "FunctionMaxMemory": "128",
        "FunctionMaxDuration": "30"
      },
      "DependsOn": [
        "ModuleRegistration"
      ]
    },
    "Function": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeploymentBucketName"
          },
          "S3Key": {
            "Fn::Sub": "${DeploymentBucketPath}TestModule/TestModule.Function-NOCOMPILE.zip"
          }
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::If": [
              "ModuleDeadLetterQueueArnIsImport",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": [
                    "${Tier}-${Import}",
                    {
                      "Import": {
                        "Fn::Select": [
                          "1",
                          {
                            "Fn::Split": [
                              "$",
                              {
                                "Ref": "ModuleDeadLetterQueueArn"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Ref": "ModuleDeadLetterQueueArn"
              }
            ]
          }
        },
        "Description": "My function (v1.0)",
        "Environment": {
          "Variables": {
            "TIER": {
              "Ref": "Tier"
            },
            "MODULE_NAME": "TestModule",
            "MODULE_ID": {
              "Ref": "AWS::StackName"
            },
            "MODULE_VERSION": "1.0",
            "LAMBDA_NAME": "Function",
            "LAMBDA_RUNTIME": "dotnetcore2.1",
            "DEADLETTERQUEUE": {
              "Fn::If": [
                "ModuleDeadLetterQueueArnIsImport",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${Tier}-${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "ModuleDeadLetterQueueArn"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "ModuleDeadLetterQueueArn"
                }
              ]
            },
            "DEFAULTSECRETKEY": {
              "Fn::If": [
                "ModuleDefaultSecretKeyArnIsImport",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${Tier}-${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "ModuleDefaultSecretKeyArn"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "ModuleDefaultSecretKeyArn"
                }
              ]
            },
            "STR_SQS1": {
              "Ref": "Sqs1"
            },
            "STR_SQS2": {
              "Ref": "Sqs2"
            }
          }
        },
        "Handler": "TestModule.Function::MindTouch.LambdaSharpTestModule.Function.Function::FunctionHandlerAsync",
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ModuleRole",
            "Arn"
          ]
        },
        "Runtime": "dotnetcore2.1",
        "Timeout": "30"
      }
    },
    "FunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "/aws/lambda/${Function}"
        },
        "RetentionInDays": 7
      }
    },
    "FunctionLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": {
          "Fn::If": [
            "ModuleLoggingStreamArnIsImport",
            {
              "Fn::ImportValue": {
                "Fn::Sub": [
                  "${Tier}-${Import}",
                  {
                    "Import": {
                      "Fn::Select": [
                        "1",
                        {
                          "Fn::Split": [
                            "$",
                            {
                              "Ref": "ModuleLoggingStreamArn"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "Ref": "ModuleLoggingStreamArn"
            }
          ]
        },
        "FilterPattern": "-\"*** \"",
        "LogGroupName": {
          "Ref": "FunctionLogGroup"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "CloudWatchLogsRole",
            "Arn"
          ]
        }
      }
    },
    "FunctionSqs1EventMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 10,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "Sqs1",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "Function"
        }
      }
    },
    "FunctionSqs2EventMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 1,
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "Sqs2",
            "Arn"
          ]
        },
        "FunctionName": {
          "Ref": "Function"
        }
      }
    }
  },
  "Conditions": {
    "ModuleDeadLetterQueueArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "ModuleDeadLetterQueueArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "ModuleLoggingStreamArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "ModuleLoggingStreamArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "ModuleDefaultSecretKeyArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "ModuleDefaultSecretKeyArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterLabels": {
        "ModuleSecrets": {
          "default": "Secret Keys (ARNs)"
        },
        "ModuleDeadLetterQueueArn": {
          "default": "Dead Letter Queue (ARN)"
        },
        "ModuleLoggingStreamArn": {
          "default": "Logging Stream (ARN)"
        },
        "ModuleDefaultSecretKeyArn": {
          "default": "Secret Key (ARN)"
        },
        "DeploymentBucketName": {
          "default": "S3 Bucket Name"
        },
        "DeploymentBucketPath": {
          "default": "S3 Bucket Path"
        },
        "Tier": {
          "default": "Tier"
        },
        "TierLowercase": {
          "default": "Tier (lowercase)"
        }
      },
      "ParameterGroups": [
        {
          "Label": {
            "default": "LambdaSharp Module Options"
          },
          "Parameters": [
            "ModuleSecrets"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Module Internal Dependencies"
          },
          "Parameters": [
            "ModuleDeadLetterQueueArn",
            "ModuleLoggingStreamArn",
            "ModuleDefaultSecretKeyArn"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Deployment Settings (DO NOT MODIFY)"
          },
          "Parameters": [
            "DeploymentBucketName",
            "DeploymentBucketPath",
            "Tier",
            "TierLowercase"
          ]
        }
      ]
    }
  }
}