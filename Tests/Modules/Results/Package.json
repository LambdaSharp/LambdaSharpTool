{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "LambdaSharp CloudFormation Test (v1.0-DEV)",
  "Parameters": {
    "Secrets": {
      "Type": "String",
      "Description": "Secret Keys (ARNs)",
      "Default": ""
    },
    "XRayTracing": {
      "Type": "String",
      "Description": "AWS X-Ray Tracing",
      "AllowedValues": [
        "Disabled",
        "RootModule",
        "AllModules"
      ],
      "Default": "Disabled"
    },
    "LambdaSharpCoreServices": {
      "Type": "String",
      "Description": "Use LambdaSharp.Core Services",
      "AllowedValues": [
        "Disabled",
        "Enabled"
      ],
      "Default": "Disabled"
    },
    "LambdaSharpCoreDeadLetterQueue": {
      "Type": "String",
      "Description": "Cross-module reference for LambdaSharp.Core::DeadLetterQueue",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module reference or a non-empty value",
      "Default": "$LambdaSharp-Core::DeadLetterQueue"
    },
    "LambdaSharpCoreLoggingStream": {
      "Type": "String",
      "Description": "Cross-module reference for LambdaSharp.Core::LoggingStream",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module reference or a non-empty value",
      "Default": "$LambdaSharp-Core::LoggingStream"
    },
    "LambdaSharpCoreLoggingStreamRole": {
      "Type": "String",
      "Description": "Cross-module reference for LambdaSharp.Core::LoggingStreamRole",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module reference or a non-empty value",
      "Default": "$LambdaSharp-Core::LoggingStreamRole"
    },
    "DeploymentBucketName": {
      "Type": "String",
      "Description": "Deployment S3 Bucket Name"
    },
    "DeploymentPrefix": {
      "Type": "String",
      "Description": "Deployment Tier Prefix"
    },
    "DeploymentPrefixLowercase": {
      "Type": "String",
      "Description": "Deployment Tier Prefix (lowercase)"
    },
    "DeploymentRoot": {
      "Type": "String",
      "Description": "Root Stack Name",
      "Default": ""
    },
    "DeploymentChecksum": {
      "Type": "String",
      "Description": "Deployment Checksum",
      "Default": "29458BF54E4CB98D203CDA9EB9D6FF82"
    }
  },
  "Resources": {
    "MyBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {}
    },
    "MyPackage": {
      "Type": "Custom::LambdaSharpS3Unzip",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}LambdaSharp::S3::Unzip"
          }
        },
        "ResourceType": "LambdaSharp::S3::Unzip",
        "DestinationBucket": {
          "Ref": "MyBucket"
        },
        "DestinationKey": "Bucket/Folder/",
        "SourceBucketName": {
          "Ref": "DeploymentBucketName"
        },
        "SourceKey": "<%MODULE_ORIGIN%>/Test/TestModule/.artifacts/FilesPackage-DRYRUN.zip"
      }
    },
    "Function": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "DeploymentBucketName"
          },
          "S3Key": "<%MODULE_ORIGIN%>/Test/TestModule/.artifacts/Function-DRYRUN.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::If": [
              "UseCoreServices",
              {
                "Fn::If": [
                  "LambdaSharpCoreDeadLetterQueueIsImported",
                  {
                    "Fn::ImportValue": {
                      "Fn::Sub": [
                        "${DeploymentPrefix}${Import}",
                        {
                          "Import": {
                            "Fn::Select": [
                              "1",
                              {
                                "Fn::Split": [
                                  "$",
                                  {
                                    "Ref": "LambdaSharpCoreDeadLetterQueue"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "Ref": "LambdaSharpCoreDeadLetterQueue"
                  }
                ]
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        },
        "Description": "My function (v1.0-DEV)",
        "Environment": {
          "Variables": {
            "DEBUG_LOGGING_ENABLED": "false",
            "AWS_LAMBDA_HANDLER_LOG_FORMAT": "Unformatted",
            "MODULE_ID": {
              "Ref": "AWS::StackName"
            },
            "MODULE_INFO": "Test.TestModule:1.0-DEV@<%MODULE_ORIGIN%>",
            "LAMBDA_NAME": "Function",
            "LAMBDA_RUNTIME": "dotnet6",
            "DEPLOYMENT_TIER": {
              "Fn::Select": [
                "0",
                {
                  "Fn::Split": [
                    "-",
                    {
                      "Ref": "DeploymentPrefix"
                    }
                  ]
                }
              ]
            },
            "DEPLOYMENTBUCKETNAME": {
              "Ref": "DeploymentBucketName"
            },
            "DEADLETTERQUEUE": {
              "Fn::If": [
                "UseCoreServices",
                {
                  "Fn::If": [
                    "LambdaSharpCoreDeadLetterQueueIsImported",
                    {
                      "Fn::ImportValue": {
                        "Fn::Sub": [
                          "${DeploymentPrefix}${Import}",
                          {
                            "Import": {
                              "Fn::Select": [
                                "1",
                                {
                                  "Fn::Split": [
                                    "$",
                                    {
                                      "Ref": "LambdaSharpCoreDeadLetterQueue"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "Ref": "LambdaSharpCoreDeadLetterQueue"
                    }
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "STR_MODULE_ROLE_DEADLETTERQUEUEPOLICY": {
              "Fn::If": [
                "UseCoreServices",
                {
                  "Ref": "ModuleRoleDeadLetterQueuePolicy"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          }
        },
        "Handler": "Function::LambdaSharpTestModule.Function.Function::FunctionHandlerAsync",
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "ModuleRole",
            "Arn"
          ]
        },
        "Runtime": "dotnet6",
        "Timeout": "30",
        "TracingConfig": {
          "Mode": {
            "Fn::If": [
              "XRayIsEnabled",
              "Active",
              "PassThrough"
            ]
          }
        }
      }
    },
    "FunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "/aws/lambda/${Function}"
        },
        "RetentionInDays": 30
      }
    },
    "ModuleRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "ModuleLambdaPrincipal",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "MyBucket",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectAcl",
                    "s3:GetObjectTagging",
                    "s3:GetObjectTorrent",
                    "s3:GetObjectVersion",
                    "s3:GetObjectVersionAcl",
                    "s3:GetObjectVersionTagging",
                    "s3:GetObjectVersionTorrent"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MyBucket",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "MyBucket",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Sid": "DeploymentSecrets",
                  "Effect": "Allow",
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt"
                  ],
                  "Resource": {
                    "Fn::If": [
                      "SecretsHasValue",
                      {
                        "Fn::Split": [
                          ",",
                          {
                            "Ref": "Secrets"
                          }
                        ]
                      },
                      {
                        "Ref": "AWS::NoValue"
                      }
                    ]
                  },
                  "NotResource": {
                    "Fn::If": [
                      "SecretsHasValue",
                      {
                        "Ref": "AWS::NoValue"
                      },
                      "*"
                    ]
                  }
                },
                {
                  "Sid": "LogStream",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Sid": "CloudFormation",
                  "Effect": "Allow",
                  "Action": [
                    "cloudformation:DescribeStacks"
                  ],
                  "Resource": {
                    "Ref": "AWS::StackId"
                  }
                },
                {
                  "Sid": "AWSXRay",
                  "Effect": "Allow",
                  "Action": [
                    "xray:GetSamplingRules",
                    "xray:GetSamplingStatisticSummaries",
                    "xray:GetSamplingTargets",
                    "xray:PutTelemetryRecords",
                    "xray:PutTraceSegments"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "EventBus",
                  "Effect": "Allow",
                  "Action": [
                    "events:PutEvents"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default"
                  }
                },
                {
                  "Sid": "DeploymentBucketReadOnly",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:s3:::${DeploymentBucketName}/<%MODULE_ORIGIN%>/Test/TestModule/.artifacts/*"
                  }
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${AWS::StackName}ModulePolicy"
            }
          }
        ]
      }
    },
    "ModuleRoleDeadLetterQueuePolicy": {
      "Type": "AWS::IAM::Policy",
      "Condition": "UseCoreServices",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "DeadLetterQueue",
              "Effect": "Allow",
              "Action": [
                "sqs:SendMessage"
              ],
              "Resource": {
                "Fn::If": [
                  "UseCoreServices",
                  {
                    "Fn::If": [
                      "LambdaSharpCoreDeadLetterQueueIsImported",
                      {
                        "Fn::ImportValue": {
                          "Fn::Sub": [
                            "${DeploymentPrefix}${Import}",
                            {
                              "Import": {
                                "Fn::Select": [
                                  "1",
                                  {
                                    "Fn::Split": [
                                      "$",
                                      {
                                        "Ref": "LambdaSharpCoreDeadLetterQueue"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "Ref": "LambdaSharpCoreDeadLetterQueue"
                      }
                    ]
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              }
            }
          ]
        },
        "PolicyName": {
          "Fn::Sub": "${AWS::StackName}ModuleRoleDeadLetterQueue"
        },
        "Roles": [
          {
            "Ref": "ModuleRole"
          }
        ]
      }
    },
    "ModuleRegistration": {
      "Type": "Custom::LambdaSharpRegistrationModule",
      "Condition": "UseCoreServices",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}LambdaSharp::Registration::Module"
          }
        },
        "ResourceType": "LambdaSharp::Registration::Module",
        "ModuleInfo": "Test.TestModule:1.0-DEV@<%MODULE_ORIGIN%>",
        "ModuleId": {
          "Ref": "AWS::StackName"
        }
      }
    },
    "FunctionRegistration": {
      "Type": "Custom::LambdaSharpRegistrationFunction",
      "Condition": "UseCoreServices",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}LambdaSharp::Registration::Function"
          }
        },
        "ResourceType": "LambdaSharp::Registration::Function",
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "FunctionId": {
          "Ref": "Function"
        },
        "FunctionName": "Function",
        "FunctionLogGroupName": {
          "Fn::Sub": "/aws/lambda/${Function}"
        },
        "FunctionPlatform": "AWS Lambda",
        "FunctionFramework": "dotnet6",
        "FunctionLanguage": "csharp",
        "FunctionMaxMemory": "128",
        "FunctionMaxDuration": "30"
      },
      "DependsOn": [
        "ModuleRegistration"
      ]
    },
    "FunctionLogGroupSubscription": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Condition": "UseCoreServices",
      "Properties": {
        "DestinationArn": {
          "Fn::If": [
            "UseCoreServices",
            {
              "Fn::If": [
                "LambdaSharpCoreLoggingStreamIsImported",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${DeploymentPrefix}${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "LambdaSharpCoreLoggingStream"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "LambdaSharpCoreLoggingStream"
                }
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "FilterPattern": "-\"*** \"",
        "LogGroupName": {
          "Ref": "FunctionLogGroup"
        },
        "RoleArn": {
          "Fn::If": [
            "UseCoreServices",
            {
              "Fn::If": [
                "LambdaSharpCoreLoggingStreamRoleIsImported",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${DeploymentPrefix}${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "LambdaSharpCoreLoggingStreamRole"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "LambdaSharpCoreLoggingStreamRole"
                }
              ]
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ModuleInfo": {
      "Value": "Test.TestModule:1.0-DEV@<%MODULE_ORIGIN%>"
    },
    "ModuleChecksum": {
      "Value": {
        "Ref": "DeploymentChecksum"
      }
    },
    "LambdaSharpTool": {
      "Value": "1.0.0"
    },
    "LambdaSharpTier": {
      "Value": {
        "Fn::Select": [
          "0",
          {
            "Fn::Split": [
              "-",
              {
                "Ref": "DeploymentPrefix"
              }
            ]
          }
        ]
      }
    }
  },
  "Conditions": {
    "SecretsHasValue": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "Secrets"
            },
            ""
          ]
        }
      ]
    },
    "XRayIsEnabled": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "XRayTracing"
            },
            "Disabled"
          ]
        }
      ]
    },
    "UseCoreServices": {
      "Fn::Equals": [
        {
          "Ref": "LambdaSharpCoreServices"
        },
        "Enabled"
      ]
    },
    "LambdaSharpCoreDeadLetterQueueIsImported": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "LambdaSharpCoreDeadLetterQueue"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "0",
                {
                  "Fn::Split": [
                    "$",
                    {
                      "Ref": "LambdaSharpCoreDeadLetterQueue"
                    }
                  ]
                }
              ]
            },
            ""
          ]
        }
      ]
    },
    "LambdaSharpCoreLoggingStreamIsImported": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "LambdaSharpCoreLoggingStream"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "0",
                {
                  "Fn::Split": [
                    "$",
                    {
                      "Ref": "LambdaSharpCoreLoggingStream"
                    }
                  ]
                }
              ]
            },
            ""
          ]
        }
      ]
    },
    "LambdaSharpCoreLoggingStreamRoleIsImported": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "LambdaSharpCoreLoggingStreamRole"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "0",
                {
                  "Fn::Split": [
                    "$",
                    {
                      "Ref": "LambdaSharpCoreLoggingStreamRole"
                    }
                  ]
                }
              ]
            },
            ""
          ]
        }
      ]
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterLabels": {
        "Secrets": {
          "default": "Comma-separated list of additional KMS secret keys [String]"
        },
        "XRayTracing": {
          "default": "Enable AWS X-Ray tracing mode for module resources [String]"
        },
        "LambdaSharpCoreServices": {
          "default": "Integrate with LambdaSharp.Core services [String]"
        },
        "LambdaSharpCoreDeadLetterQueue": {
          "default": "DeadLetterQueue [String]"
        },
        "LambdaSharpCoreLoggingStream": {
          "default": "LoggingStream [String]"
        },
        "LambdaSharpCoreLoggingStreamRole": {
          "default": "LoggingStreamRole [String]"
        },
        "DeploymentBucketName": {
          "default": "Deployment S3 bucket name [String]"
        },
        "DeploymentPrefix": {
          "default": "Deployment tier prefix [String]"
        },
        "DeploymentPrefixLowercase": {
          "default": "Deployment tier prefix (lowercase) [String]"
        },
        "DeploymentRoot": {
          "default": "Root stack name for nested deployments, blank otherwise [String]"
        },
        "DeploymentChecksum": {
          "default": "CloudFormation template MD5 checksum [String]"
        }
      },
      "ParameterGroups": [
        {
          "Label": {
            "default": "LambdaSharp Module Options"
          },
          "Parameters": [
            "Secrets",
            "XRayTracing",
            "LambdaSharpCoreServices"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp.Core Imports"
          },
          "Parameters": [
            "LambdaSharpCoreDeadLetterQueue",
            "LambdaSharpCoreLoggingStream",
            "LambdaSharpCoreLoggingStreamRole"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Deployment Settings (DO NOT MODIFY)"
          },
          "Parameters": [
            "DeploymentBucketName",
            "DeploymentPrefix",
            "DeploymentPrefixLowercase",
            "DeploymentRoot",
            "DeploymentChecksum"
          ]
        }
      ]
    },
    "LambdaSharp::Manifest": {
      "Version": "2019-07-04",
      "Module": "Test.TestModule:1.0-DEV",
      "Description": "LambdaSharp CloudFormation Test",
      "TemplateChecksum": "29458BF54E4CB98D203CDA9EB9D6FF82",
      "Date": "2019-08-09T15:00:00Z",
      "CoreServicesVersion": "1",
      "ParameterSections": [
        {
          "Title": "LambdaSharp Module Options",
          "Parameters": [
            {
              "Name": "Secrets",
              "Type": "String",
              "Label": "Comma-separated list of additional KMS secret keys",
              "Default": ""
            },
            {
              "Name": "XRayTracing",
              "Type": "String",
              "Label": "Enable AWS X-Ray tracing mode for module resources",
              "Default": "Disabled",
              "AllowedValues": [
                "Disabled",
                "RootModule",
                "AllModules"
              ]
            },
            {
              "Name": "LambdaSharpCoreServices",
              "Type": "String",
              "Label": "Integrate with LambdaSharp.Core services",
              "Default": "Disabled",
              "AllowedValues": [
                "Disabled",
                "Enabled"
              ]
            }
          ]
        },
        {
          "Title": "LambdaSharp.Core Imports",
          "Parameters": [
            {
              "Name": "LambdaSharpCoreDeadLetterQueue",
              "Type": "String",
              "Label": "DeadLetterQueue",
              "Default": "$LambdaSharp-Core::DeadLetterQueue",
              "Import": "LambdaSharp.Core::DeadLetterQueue",
              "AllowedPattern": "^.+$",
              "ConstraintDescription": "must either be a cross-module reference or a non-empty value"
            },
            {
              "Name": "LambdaSharpCoreLoggingStream",
              "Type": "String",
              "Label": "LoggingStream",
              "Default": "$LambdaSharp-Core::LoggingStream",
              "Import": "LambdaSharp.Core::LoggingStream",
              "AllowedPattern": "^.+$",
              "ConstraintDescription": "must either be a cross-module reference or a non-empty value"
            },
            {
              "Name": "LambdaSharpCoreLoggingStreamRole",
              "Type": "String",
              "Label": "LoggingStreamRole",
              "Default": "$LambdaSharp-Core::LoggingStreamRole",
              "Import": "LambdaSharp.Core::LoggingStreamRole",
              "AllowedPattern": "^.+$",
              "ConstraintDescription": "must either be a cross-module reference or a non-empty value"
            }
          ]
        }
      ],
      "Git": {
        "Branch": "test-branch",
        "SHA": "0123456789ABCDEF0123456789ABCDEF01234567"
      },
      "Artifacts": [],
      "Dependencies": [],
      "ResourceTypes": [],
      "Outputs": []
    },
    "LambdaSharp::NameMappings": {
      "Version": "2019-07-04",
      "ResourceNameMappings": {
        "FunctionLogGroup": "Function::LogGroup",
        "ModuleRole": "Module::Role",
        "ModuleRoleDeadLetterQueuePolicy": "Module::Role::DeadLetterQueuePolicy",
        "ModuleRegistration": "Module::Registration",
        "FunctionRegistration": "Function::Registration",
        "FunctionLogGroupSubscription": "Function::LogGroupSubscription"
      },
      "TypeNameMappings": {
        "Custom::LambdaSharpS3Unzip": "LambdaSharp::S3::Unzip",
        "Custom::LambdaSharpRegistrationModule": "LambdaSharp::Registration::Module",
        "Custom::LambdaSharpRegistrationFunction": "LambdaSharp::Registration::Function"
      }
    }
  }
}