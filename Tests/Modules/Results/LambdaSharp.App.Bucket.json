{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploy LambdaSharp app package to an S3 bucket (v1.0-DEV)",
  "Parameters": {
    "CloudFrontOriginAccessIdentity": {
      "Type": "String",
      "Description": "CloudFront Origin Identity for authenticating distribution with the S3 bucket (Empty value configures S3 bucket as a public website)"
    },
    "Package": {
      "Type": "String",
      "Description": "S3 key to LambdaSharp app package to deploy"
    },
    "ContentEncoding": {
      "Type": "String",
      "Description": "Content encoding for LambdaSharp app assets (DEFAULT uses BROTLI for CloudFront and GZIP otherwise)",
      "AllowedValues": [
        "NONE",
        "GZIP",
        "BROTLI",
        "DEFAULT"
      ]
    },
    "Secrets": {
      "Type": "String",
      "Description": "Secret Keys (ARNs)",
      "Default": ""
    },
    "LambdaSharpCoreServices": {
      "Type": "String",
      "Description": "Use LambdaSharp.Core Services",
      "AllowedValues": [
        "Disabled",
        "Enabled"
      ],
      "Default": "Disabled"
    },
    "DeploymentBucketName": {
      "Type": "String",
      "Description": "Deployment S3 Bucket Name"
    },
    "DeploymentPrefix": {
      "Type": "String",
      "Description": "Deployment Tier Prefix"
    },
    "DeploymentPrefixLowercase": {
      "Type": "String",
      "Description": "Deployment Tier Prefix (lowercase)"
    },
    "DeploymentRoot": {
      "Type": "String",
      "Description": "Root Stack Name",
      "Default": ""
    },
    "DeploymentChecksum": {
      "Type": "String",
      "Description": "Deployment Checksum",
      "Default": "E78287D8A422943BADF6A410B4516D6C"
    }
  },
  "Resources": {
    "Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": {
          "Fn::If": [
            "CloudFrontOriginAccessIdentityHasValue",
            {
              "Ref": "AWS::NoValue"
            },
            "PublicRead"
          ]
        },
        "WebsiteConfiguration": {
          "Fn::If": [
            "CloudFrontOriginAccessIdentityHasValue",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "IndexDocument": "index.html",
              "ErrorDocument": "index.html"
            }
          ]
        }
      }
    },
    "AssetsDeployment": {
      "Type": "Custom::LambdaSharpS3Unzip",
      "Condition": "PackageHasValue",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}LambdaSharp::S3::Unzip"
          }
        },
        "ResourceType": "LambdaSharp::S3::Unzip",
        "SourceBucket": {
          "Ref": "DeploymentBucketName"
        },
        "SourceKey": {
          "Ref": "Package"
        },
        "DestinationBucket": {
          "Ref": "Bucket"
        },
        "DestinationKey": "",
        "Encoding": {
          "Fn::If": [
            "ContentEncodingIsDefault",
            {
              "Fn::If": [
                "CloudFrontOriginAccessIdentityHasValue",
                "BROTLI",
                "GZIP"
              ]
            },
            {
              "Ref": "ContentEncoding"
            }
          ]
        }
      }
    },
    "BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Fn::If": [
            "CloudFrontOriginAccessIdentityHasValue",
            {
              "Id": "AppBucket",
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowCloudFrontAccess",
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": {
                      "Fn::Sub": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"
                    }
                  },
                  "Action": "s3:GetObject",
                  "Resource": {
                    "Fn::Sub": "${Bucket.Arn}/*"
                  }
                }
              ]
            },
            {
              "Id": "AppBucket",
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadForGetBucketObjects",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": {
                    "Fn::Sub": "${Bucket.Arn}/*"
                  }
                }
              ]
            }
          ]
        },
        "Bucket": {
          "Ref": "Bucket"
        }
      }
    },
    "ModuleRegistration": {
      "Type": "Custom::LambdaSharpRegistrationModule",
      "Condition": "UseCoreServices",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}LambdaSharp::Registration::Module"
          }
        },
        "ResourceType": "LambdaSharp::Registration::Module",
        "ModuleInfo": "LambdaSharp.App.Bucket:1.0-DEV@<%MODULE_ORIGIN%>",
        "ModuleId": {
          "Ref": "AWS::StackName"
        }
      }
    }
  },
  "Outputs": {
    "Arn": {
      "Value": {
        "Fn::GetAtt": [
          "Bucket",
          "Arn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::Arn"
        }
      },
      "Description": "App assets S3 bucket ARN"
    },
    "DomainName": {
      "Value": {
        "Fn::GetAtt": [
          "Bucket",
          "DomainName"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::DomainName"
        }
      },
      "Description": "App assets S3 bucket domain name"
    },
    "WebsiteUrl": {
      "Value": {
        "Fn::GetAtt": [
          "Bucket",
          "WebsiteURL"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::WebsiteUrl"
        }
      },
      "Description": "App assets S3 bucket website URL"
    },
    "ModuleInfo": {
      "Value": "LambdaSharp.App.Bucket:1.0-DEV@<%MODULE_ORIGIN%>"
    },
    "ModuleChecksum": {
      "Value": {
        "Ref": "DeploymentChecksum"
      }
    },
    "LambdaSharpTool": {
      "Value": "1.0.0"
    },
    "LambdaSharpTier": {
      "Value": {
        "Fn::Select": [
          "0",
          {
            "Fn::Split": [
              "-",
              {
                "Ref": "DeploymentPrefix"
              }
            ]
          }
        ]
      }
    }
  },
  "Conditions": {
    "CloudFrontOriginAccessIdentityHasValue": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "CloudFrontOriginAccessIdentity"
            },
            ""
          ]
        }
      ]
    },
    "PackageHasValue": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "Package"
            },
            ""
          ]
        }
      ]
    },
    "ContentEncodingIsDefault": {
      "Fn::Equals": [
        {
          "Ref": "ContentEncoding"
        },
        "DEFAULT"
      ]
    },
    "UseCoreServices": {
      "Fn::Equals": [
        {
          "Ref": "LambdaSharpCoreServices"
        },
        "Enabled"
      ]
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterLabels": {
        "CloudFrontOriginAccessIdentity": {
          "default": "CloudFront Origin Identity for authenticating distribution with the S3 bucket (Empty value configures S3 bucket as a public website) [String]"
        },
        "Package": {
          "default": "S3 key to LambdaSharp app package to deploy [String]"
        },
        "ContentEncoding": {
          "default": "Content encoding for LambdaSharp app assets (DEFAULT uses BROTLI for CloudFront and GZIP otherwise) [String]"
        },
        "Secrets": {
          "default": "Comma-separated list of additional KMS secret keys [String]"
        },
        "LambdaSharpCoreServices": {
          "default": "Integrate with LambdaSharp.Core services [String]"
        },
        "DeploymentBucketName": {
          "default": "Deployment S3 bucket name [String]"
        },
        "DeploymentPrefix": {
          "default": "Deployment tier prefix [String]"
        },
        "DeploymentPrefixLowercase": {
          "default": "Deployment tier prefix (lowercase) [String]"
        },
        "DeploymentRoot": {
          "default": "Root stack name for nested deployments, blank otherwise [String]"
        },
        "DeploymentChecksum": {
          "default": "CloudFormation template MD5 checksum [String]"
        }
      },
      "ParameterGroups": [
        {
          "Label": {
            "default": "Module Settings"
          },
          "Parameters": [
            "CloudFrontOriginAccessIdentity",
            "Package",
            "ContentEncoding"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Module Options"
          },
          "Parameters": [
            "Secrets",
            "LambdaSharpCoreServices"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Deployment Settings (DO NOT MODIFY)"
          },
          "Parameters": [
            "DeploymentBucketName",
            "DeploymentPrefix",
            "DeploymentPrefixLowercase",
            "DeploymentRoot",
            "DeploymentChecksum"
          ]
        }
      ]
    },
    "LambdaSharp::Manifest": {
      "Version": "2019-07-04",
      "Module": "LambdaSharp.App.Bucket:1.0-DEV",
      "Description": "Deploy LambdaSharp app package to an S3 bucket",
      "TemplateChecksum": "E78287D8A422943BADF6A410B4516D6C",
      "Date": "2019-08-09T15:00:00Z",
      "CoreServicesVersion": "1",
      "ParameterSections": [
        {
          "Title": "Module Settings",
          "Parameters": [
            {
              "Name": "CloudFrontOriginAccessIdentity",
              "Type": "String"
            },
            {
              "Name": "Package",
              "Type": "String"
            },
            {
              "Name": "ContentEncoding",
              "Type": "String",
              "AllowedValues": [
                "NONE",
                "GZIP",
                "BROTLI",
                "DEFAULT"
              ]
            }
          ]
        },
        {
          "Title": "LambdaSharp Module Options",
          "Parameters": [
            {
              "Name": "Secrets",
              "Type": "String",
              "Label": "Comma-separated list of additional KMS secret keys",
              "Default": ""
            },
            {
              "Name": "LambdaSharpCoreServices",
              "Type": "String",
              "Label": "Integrate with LambdaSharp.Core services",
              "Default": "Disabled",
              "AllowedValues": [
                "Disabled",
                "Enabled"
              ]
            }
          ]
        }
      ],
      "Git": {
        "Branch": "test-branch",
        "SHA": "0123456789ABCDEF0123456789ABCDEF01234567"
      },
      "Artifacts": [],
      "Dependencies": [
        {
          "ModuleInfo": "LambdaSharp.S3.IO@lambdasharp",
          "Type": "Shared"
        }
      ],
      "ResourceTypes": [],
      "Outputs": [
        {
          "Name": "Arn",
          "Description": "App assets S3 bucket ARN",
          "Type": "String"
        },
        {
          "Name": "DomainName",
          "Description": "App assets S3 bucket domain name",
          "Type": "String"
        },
        {
          "Name": "WebsiteUrl",
          "Description": "App assets S3 bucket website URL",
          "Type": "String"
        }
      ]
    },
    "LambdaSharp::NameMappings": {
      "Version": "2019-07-04",
      "ResourceNameMappings": {
        "ModuleRegistration": "Module::Registration"
      },
      "TypeNameMappings": {
        "Custom::LambdaSharpS3Unzip": "LambdaSharp::S3::Unzip",
        "Custom::LambdaSharpRegistrationModule": "LambdaSharp::Registration::Module"
      }
    }
  }
}